{"version":3,"sources":["components/Character/index.js","getCharacters.js","App.js","hooks/useVisible.js","index.js"],"names":["Character","character","className","src","image","alt","name","gender","species","origin","location","id","getCaracters","a","page","fetch","response","json","results","App","useState","characters","setCharacters","setPage","visorRef","useRef","visible","setVisible","useEffect","current","observer","IntersectionObserver","entries","entry","isIntersecting","root","rootMargin","threshold","observe","disconnect","useVisible","changePage","useCallback","debounce","prev","gettingCharacters","concat","map","ref","ReactDOM","render","document","getElementById"],"mappings":"0RAEe,SAASA,EAAT,GAAmC,IAAdC,EAAa,EAAbA,UAClC,OACE,qBAAuBC,UAAU,YAAjC,UACE,qBAAKC,IAAKF,EAAUG,MAAOC,IAAKJ,EAAUK,OAC1C,gCACE,6BAAKL,EAAUK,OACf,qBAAIJ,UAAU,kBAAd,UACE,0CAAaD,EAAUM,UACvB,2CAAcN,EAAUO,WACxB,0CAAaP,EAAUQ,OAAOH,QAC9B,4CAAeL,EAAUS,SAASJ,gBAR/BL,EAAUU,ICJR,SAAeC,EAA9B,kC,4CAAe,mCAAAC,EAAA,6DAA8BC,EAA9B,EAA8BA,KAA9B,SACUC,MAAM,kDAAD,OACwBD,IAFvC,cACPE,EADO,gBAIaA,EAASC,OAJtB,uBAILC,EAJK,EAILA,QAJK,kBAMNA,GANM,4C,uCCsDAC,MA/Cf,WACE,MAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAAwBF,mBAAS,GAAjC,mBAAON,EAAP,KAAaS,EAAb,KAGMC,EAAWC,iBAAO,MACxB,ECXa,YAAmC,IAAbD,EAAY,EAAZA,SACnC,EAA8BJ,oBAAS,GAAvC,mBAAOM,EAAP,KAAgBC,EAAhB,KA0BA,OAxBAC,qBAAU,WACR,IAAQC,EAAYL,EAAZK,QAcFC,EAAW,IAAIC,sBAbI,SAACC,GACxB,IAAOC,EAAP,YAAgBD,EAAhB,MAEAL,EAAWM,EAAMC,kBAGH,CAEdC,KAAM,KACNC,WAAY,MACZC,UAAW,IAMb,OAFIR,GAASC,EAASQ,QAAQT,GAEvB,WAEDA,GAASC,EAASS,gBAEvB,CAACf,IAEG,CAAEE,WDhBWc,CAAW,CAAEhB,aAAzBE,EAAR,EAAQA,QAEFe,EAAaC,uBACjB,kBACEC,YACEpB,GAAQ,SAACqB,GAAD,OAAUA,EAAO,KACzB,OAEJ,IAGFhB,qBAAU,WACJF,GACFe,MAED,CAACf,EAASe,IAEb,IAAMI,EAAiB,uCAAG,+BAAAhC,EAAA,6DAASC,EAAT,EAASA,KAAT,SACFF,EAAa,CAAEE,SADb,OAClBI,EADkB,OAExBI,GAAc,SAACsB,GAAD,OAAUA,EAAKE,OAAO5B,MAFZ,2CAAH,sDASvB,OAJAU,qBAAU,WACRiB,EAAkB,CAAE/B,WACnB,CAACA,IAGF,sBAAKZ,UAAU,MAAf,UACE,wBAAQA,UAAU,aAAlB,SACE,mEAEF,oBAAIA,UAAU,kBAAd,gBACGmB,QADH,IACGA,OADH,EACGA,EAAY0B,KAAI,SAAC9C,GAChB,OAAO,cAAC,EAAD,CAAWA,UAAS,eAAOA,IAAkBA,EAAUU,SAGlE,qBAAKT,UAAU,QAAQ8C,IAAKxB,Q,ME5ClCyB,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.003add5a.chunk.js","sourcesContent":["import './index.css'\r\n\r\nexport default function Character({ character }) {\r\n  return (\r\n    <li key={character.id} className='character'>\r\n      <img src={character.image} alt={character.name} />\r\n      <div>\r\n        <h2>{character.name}</h2>\r\n        <ul className='character__info'>\r\n          <li>Gender: {character.gender}</li>\r\n          <li>Species: {character.species}</li>\r\n          <li>Origin: {character.origin.name}</li>\r\n          <li>Location: {character.location.name}</li>\r\n        </ul>\r\n      </div>\r\n    </li>\r\n  )\r\n}\r\n","export default async function getCaracters({ page }) {\r\n  const response = await fetch(\r\n    `https://rickandmortyapi.com/api/character?page=${page}`\r\n  )\r\n  const { results } = await response.json()\r\n\r\n  return results\r\n}\r\n","import { useEffect, useState, useRef, useCallback } from 'react'\r\nimport Character from './components/Character'\r\nimport getCaracters from './getCharacters'\r\nimport useVisible from './hooks/useVisible'\r\nimport debounce from 'just-debounce-it'\r\nimport './App.css'\r\n\r\nfunction App() {\r\n  const [characters, setCharacters] = useState([])\r\n  const [page, setPage] = useState(1)\r\n\r\n  //IO\r\n  const visorRef = useRef(null)\r\n  const { visible } = useVisible({ visorRef })\r\n\r\n  const changePage = useCallback(\r\n    () =>\r\n      debounce(\r\n        setPage((prev) => prev + 1),\r\n        100\r\n      ),\r\n    []\r\n  )\r\n\r\n  useEffect(() => {\r\n    if (visible) {\r\n      changePage()\r\n    }\r\n  }, [visible, changePage])\r\n\r\n  const gettingCharacters = async ({ page }) => {\r\n    const results = await getCaracters({ page })\r\n    setCharacters((prev) => prev.concat(results))\r\n  }\r\n\r\n  useEffect(() => {\r\n    gettingCharacters({ page })\r\n  }, [page])\r\n\r\n  return (\r\n    <div className='App'>\r\n      <header className='App-header'>\r\n        <h1>Prueba de intersection observer</h1>\r\n      </header>\r\n      <ul className='character__list'>\r\n        {characters?.map((character) => {\r\n          return <Character character={{ ...character }} key={character.id} />\r\n        })}\r\n      </ul>\r\n      <div className='visor' ref={visorRef}></div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import { useEffect, useState } from 'react'\r\n\r\nexport default function useVisible({ visorRef }) {\r\n  const [visible, setVisible] = useState(false)\r\n\r\n  useEffect(() => {\r\n    const { current } = visorRef\r\n    const callbackFunction = (entries) => {\r\n      const [entry] = entries\r\n\r\n      setVisible(entry.isIntersecting) //Sí esta en pantalla, pone el estado en true, de lo contrario, lo pone en false\r\n    }\r\n\r\n    const options = {\r\n      //Configuraciones del intersection observer\r\n      root: null,\r\n      rootMargin: '0px',\r\n      threshold: 1.0\r\n    }\r\n\r\n    const observer = new IntersectionObserver(callbackFunction, options) //Creamos la instancia del intersection observer\r\n    if (current) observer.observe(current) //Sí tenemos al visor, lo observamos\r\n\r\n    return () => {\r\n      //Debemos desobservar si salimos del componente\r\n      if (current) observer.disconnect()\r\n    }\r\n  }, [visorRef])\r\n\r\n  return { visible }\r\n}\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\nimport './index.css'\r\n\r\nReactDOM.render(<App />, document.getElementById('root'))\r\n"],"sourceRoot":""}